FORMAT: 1A

# SWAPR API

API for the MOOC SWAPR application. This is a somewhat rough draft that's missing a
some stuff at the moment.


# Group Student Creation
Creating students, will be deprecated after GT authenticaiton provided

## Student Creation Endpoint [/users/]

## Create Student [POST]
+ Request (application/json)

    + Body
    
            {'username': 'student0', 'password': 'student0'}

+ Response 201 (application/json)

    + Body 
    
            {
                "id": 5,
                "username": "student6"
            }

# Group Auth Token
Get an Authorization Token, will be replaced by GT auth soon...

## Token [/api-token-auth/]

## Get Token [POST]
+ Request (application/json)

    + Body
    
            {
                'password': 'student0',
                'username': 'student0'
            }

+ Response 201 (application/json)

    + Body
    
            {
                "token": "dfbd47cd9c5a499fd8d987b44ee064cb4e5bbfb2"
            }

# Group Grades
Deprecated, look in assignments

## Grade [/grades/{id}]
Deprecated, look in assignments

# Group Assignments
## Assignments [/assignments]
Assignments related resources of the **SWAPR API**

### List ALL Assignments, no grades [GET]
+ Response 200 (application/json)

        [
            {
                "title": "Lab 1 Video Upload",
                "due": "2014-10-24T21:13:56.703Z",
                "status": "complete",
                "id": "1110471398572098651"
            },
            {
                "title": "Lab 2 Video Upload",
                "due": "2014-10-26T05:13:00.703Z",
                "status": "incomplete",
                "id": "1752945601572987520"
            }
        ]

## Assignment [/assignments/{id}]
A single Assignment object with all its details.

+ Parameters
    + id (required, string) ... String `id` of the assignment to retrieve.

### Retrieve an Assignment [GET]
+ Response 200 (application/json)

        {
            "id": 17, 
            "assigner": "chris wang setupscript", 
            "description": "assignment number 1 for courseNumber 1", 
            "type": "evaluation", 
            "course": 1, 
            "due_date": "2014-01-02T04:56:00Z", 
            "date_posted": "2015-02-10T05:53:17.104Z", 
            "items": [
                {
                    "id": 1, 
                    "question": "item #1 for assignment number: 1 for class number 1", 
                    "max_value": 5, 
                    "assignment": 17
                }, 
                {
                    "id": 2, 
                    "question": "item #2 for assignment number: 1 for class number 1", 
                    "max_value": 5, 
                    "assignment": 17
                }, 
                {
                    "id": 3, 
                    "question": "item #3 for assignment number: 1 for class number 1", 
                    "max_value": 5, 
                    "assignment": 17
                }, 
                {
                    "id": 4, 
                    "question": "item #4 for assignment number: 1 for class number 1", 
                    "max_value": 5, 
                    "assignment": 17
                }
            ], 
            "grade": {
                "score": 1, 
                "max_score": 9999999999
            }
        }

## Create Submission Assignment [/assignments/submission/]
In the final you should be able to post to just /assignments/, I will update this once I figure out apiary

## Make Submission Assignment [POST]
+ Request (application/x-www-form-urlencoded)

    + Body
    
            { 
                "type" : "submission"
                "description" : "Description",
                "due_date": "A DateTime",
                "assigner": "instructor (might be done through auth in future)",
            }

+ Response 201

## Create Evaluation Assignment [/assignments/evaluation]
In the final you should be able to post to just /assignments/, I will update this once I figure out apiary
## Make Evaluation Assignment [POST]
+ Request (application/x-www-form-urlencoded)

    + Body
    
            {
                "type" : "evaluation"
                'assigner': 'chris wang setupscript (might be done through auth in future)',
                  'description': 'assignment number 4 for courseNumber 4',
                  'due_date': '2014-01-05T00:00:00-04:56',
                  'items': [{'description': 'item #1 for assignment number: 4 for class number 4',
                             'max_value': 5},
                            {'description': 'item #2 for assignment number: 4 for class number 4',
                             'max_value': 5},
                            {'description': 'item #3 for assignment number: 4 for class number 4',
                             'max_value': 5},
                            {'description': 'item #4 for assignment number: 4 for class number 4',
                             'max_value': 5}]
            }
+ Response 201

# Group getAssignments
get assignment meta data

## GetAssignment [/getAssignments/{course_id}]
Get assignment meta-data for a specific course

+ Parameters
    + id (required, string) ... String course_id of the course's assignments requested

### retrieve assignment metadata for a course [GET]
+ Response 200 (application/json)

        [
            {
                "id": 1, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 1 for courseNumber 1", 
                "type": "submission", 
                "course": 1, 
                "due_date": "2014-01-02T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z", 
                "grade": {
                    "score": 50, 
                    "max_score": 100
                }
            }, 
            {
                "id": 2, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 2 for courseNumber 1", 
                "type": "submission", 
                "course": 1, 
                "due_date": "2014-01-03T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 3, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 3 for courseNumber 1", 
                "type": "submission", 
                "course": 1, 
                "due_date": "2014-01-04T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 4, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 4 for courseNumber 1", 
                "type": "submission", 
                "course": 1, 
                "due_date": "2014-01-05T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 17, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 1 for courseNumber 1", 
                "type": "evaluation", 
                "course": 1, 
                "due_date": "2014-01-02T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 18, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 2 for courseNumber 1", 
                "type": "evaluation", 
                "course": 1, 
                "due_date": "2014-01-03T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 19, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 3 for courseNumber 1", 
                "type": "evaluation", 
                "course": 1, 
                "due_date": "2014-01-04T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }, 
            {
                "id": 20, 
                "assigner": "chris wang setupscript", 
                "description": "assignment number 4 for courseNumber 1", 
                "type": "evaluation", 
                "course": 1, 
                "due_date": "2014-01-05T04:56:00Z", 
                "date_posted": "2015-02-10T05:53:17.104Z"
            }
        ]

# Group Courses
All operations that have to do with getting grade information.

## Courses [/courses]
### List ALL Courses [GET]

+ Response 200 (application/json)

        [
            {
                "id": 1, 
                "name": "course0", 
                "active": true, 
                "year": 2015, 
                "semester": "spring", 
                "students": [
                    1, 2
                ]
            }, 
            {
                "id": 2, 
                "name": "course1", 
                "active": true, 
                "year": 2015, 
                "semester": "spring", 
                "students": [
                    2, 3
                ]
            }, 
            {
                "id": 3, 
                "name": "course2", 
                "active": true, 
                "year": 2015, 
                "semester": "spring", 
                "students": [
                    3
                ]
            }, 
            {
                "id": 4, 
                "name": "course3", 
                "active": true, 
                "year": 2015, 
                "semester": "spring", 
                "students": [
                    4
                ]
            }
        ]
        
## Create Course [POST]
+ Request (application/x-www-form-urlencoded)

    + Body
    
            {
                'active': True,
                'name': 'Apiary for Dummies 101',
                'semester': 'spring',
                'year': 2015
            }

+ Response 201

# Group Profile
Profile related resoures of the **SWAPR API**. Not in rest framework at the moment...

## Profile [/profile]
A profile object.

### Retrieve a Profile [GET]

+ Response 200 (application/json)

        {
            "name": "George P. Burdell",
            "major": "Industrial Engineer",
            "tagline": "Loves bones and sticks",
            "profileImage": "http://labsandbuddies.org/IMAGES/clay%20puppy%20profile.JPG"
        }

## Profile [/profile/{id}]
A Profile object. Not implemented in rest framework

### Retrieve a Profile [GET]
+ Response 200 (application/json)

        {
            "name": "John Doe"
        }